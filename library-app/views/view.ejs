<div class="mb-4 d-flex justify-content-between align-items-center">
    <div>
        <a href="/" class="btn btn-link"><i class="bi bi-arrow-left"></i> Назад</a>
        <a href="/edit/<%= book.id %>" class="btn btn-light"><i class="bi bi-pencil"></i> Редактировать</a>
        <a href="/remove/<%= book.id %>" class="btn btn-light"><i class="bi bi-trash"></i> Удалить</a>
    </div>

    <span style="font-size: 14px"><i class="bi bi-eye"></i> <%= viewCount %></span>
</div>

<article class="mb-4">
    <div class="row">
        <div class="col-7">
            <h1 class="mb-2"><%= book.title %></h1>
            <p><%= book.authors %></p>
            <p class="lead"><%= book.description %></p>
        </div>

        <div class="col-4 offset-1">
            <% if(book.fileCover) { %>
                <p><img style="max-width: 100%;" src="<%= book.fileCover %>" alt=""></p>
            <% } %>
        </div>
    </div>
</article>

<div style="padding-bottom: 24px">
    <h5 class="mb-2">Обсуждения</h5>

    <div id="comments-list" class="list-group mb-2">
        <% comments.forEach(function(comment) { %>
            <div class="list-group-item">
                <div class="d-flex w-100 justify-content-between">
                    <small><%= comment.authorId %></small>
                    <small class="text-muted"><%= comment.createdAt %></small>
                </div>
                <p class="mb-1"><%= comment.message %></p>
            </div>
        <% }); %>
    </div>

    <form id="comment-form">
        <div class="input-group">
            <input type="text" name="message" class="form-control" placeholder="Текст комментария" required>
            <button class="btn btn-primary">Отправить</button>
        </div>
    </form>
</div>

<script src="https://cdn.socket.io/4.6.0/socket.io.min.js" integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>

<script>
    const bookId = location.pathname.split('/').pop();
    const socket = io('http://localhost:3004', {
        transports: ["websocket"],
        query: `roomName=book${bookId}`
    });

    const commentForm = document.getElementById('comment-form');
    const commentsList = document.getElementById('comments-list');

    commentForm.addEventListener('submit', e => {
        e.preventDefault();

        socket.emit('message-to-room', {
            message: e.target.message.value,
            authorId: '<%= userId %>',
            bookId
        });

        commentForm.reset();
    });

    function createMessageEl({ authorId, message, createdAt }) {
        return `
            <div class="list-group-item">
                <div class="d-flex w-100 justify-content-between">
                    <small>${authorId}</small>
                    <small class="text-muted">${createdAt}</small>
                </div>
                <p class="mb-1">${message}</p>
            </div>
        `;
    }

    socket.on('message-to-room', data => {
        commentsList.insertAdjacentHTML('beforeend', createMessageEl(data));
    });
</script>
